version: 0.2
env:
  variables:
    SERVICE_NAME: service-a
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password | docker login --username AWS --password-stdin 253603915156.dkr.ecr.ap-south-1.amazonaws.com/service-a
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - pwd
      - ls -a
      - pwd
      - cd service-a
      - mvn clean package
      - pwd
      - ls -a
      - cd target
      - ls -a
      - cd ..
      - cp target/*.jar .  # Save JAR before Docker build
      - pwd
      - ls -a
      - cd target
      - ls -a
      - cd ..
      - pwd
      - cd ..
      - ls -a
      - cd service-a
      - docker build -t $SERVICE_NAME:$IMAGE_TAG .
      - docker tag $SERVICE_NAME:$IMAGE_TAG 253603915156.dkr.ecr.ap-south-1.amazonaws.com/$SERVICE_NAME:$IMAGE_TAG
  post_build:
    commands:
      - docker push 253603915156.dkr.ecr.ap-south-1.amazonaws.com/$SERVICE_NAME:$IMAGE_TAG
      - echo Updating deployment manifest with image tag...
      - pwd
      - ls -a
      - sed "s|{{IMAGE_TAG}}|$IMAGE_TAG|g" manifests/deployment.yaml > manifests/deployment-output.yaml
      - cat manifests/deployment-output.yaml
      - pwd
      - ls -a
      - pwd
      - echo Writing image definitions...
      - printf '[{"name":"%s","imageUri":"%s"}]' "$SERVICE_NAME" "253603915156.dkr.ecr.ap-south-1.amazonaws.com/$SERVICE_NAME:$IMAGE_TAG" > imagedefinitions.json
      - cat imagedefinitions.json
      - pwd
      - ls -a
      - pwd
artifacts:
  base-directory: service-a
  files: 
    - imagedefinitions.json
    - manifests/deployment-output.yaml
    - app.jar
